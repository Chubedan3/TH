-- Tạo hoặc tìm ScreenGui để giữ sau khi reset
local screenGui = game.Players.LocalPlayer:FindFirstChild("PlayerGui"):FindFirstChild("GameAssist_GUI")
if not screenGui then
    screenGui = Instance.new("ScreenGui")
    screenGui.Name = "GameAssist_GUI"
    screenGui.ResetOnSpawn = false  
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
end

-- Xóa các nút cũ nếu có
for _, v in ipairs(screenGui:GetChildren()) do
    if v:IsA("TextButton") then v:Destroy() end
end

-- **Tạo Frame chứa nút để kéo**
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 220, 0, 70)
frame.Position = UDim2.new(1, -250, 0.05, 0)
frame.BackgroundTransparency = 1
frame.Parent = screenGui

-- **Hàm thông báo**
local function sendNotification(title, text, duration)
    game.StarterGui:SetCore("SendNotification", {
        Title = title,
        Text = text,
        Duration = duration or 3
    })
end

-- **Tìm Murderer**
local function findMurderer()
    for _, player in ipairs(game.Players:GetPlayers()) do
        if player.Backpack:FindFirstChild("Knife") or (player.Character and player.Character:FindFirstChild("Knife")) then
            return player
        end
    end
    return nil
end

-- **Tìm Sheriff hoặc Hero**
local function isSheriffOrHero(player)
    return player.Backpack:FindFirstChild("Gun") or (player.Character and player.Character:FindFirstChild("Gun"))
end

-- **Lấy Ping Hiện Tại**
local function getPing()
    return game.Stats.PerformanceStats.Ping:GetValue() / 1000  -- Chia 1000 để chuyển từ ms sang giây
end

-- **Dự đoán vị trí Murderer theo Ping**
local function predictMurdererPosition(murderer)
    if not murderer or not murderer.Character then return nil end

    local hrp = murderer.Character:FindFirstChild("HumanoidRootPart")
    local humanoid = murderer.Character:FindFirstChild("Humanoid")
    if not hrp or not humanoid then return nil end

    local velocity = hrp.Velocity  
    local moveDir = humanoid.MoveDirection  
    local ping = getPing()  

    -- Điều chỉnh dự đoán theo ping: Ping chuẩn = 100ms
    local basePing = 0.1  -- 100ms
    local predictionFactor = math.clamp(ping / basePing, 0.5, 3)  

    -- Xác định hướng di chuyển và rơi của Murderer
    local yOffset = 0
    if humanoid:GetState() == Enum.HumanoidStateType.Jumping then
        yOffset = humanoid.JumpPower * 0.25 * predictionFactor
    elseif humanoid:GetState() == Enum.HumanoidStateType.Freefall then
        yOffset = -humanoid.JumpPower * 0.15 * predictionFactor
    end

    return hrp.Position + (velocity * ping * predictionFactor) + (moveDir * 3 * predictionFactor) + Vector3.new(0, yOffset, 0)
end

-- **Shoot Murder (Dự đoán theo Ping)**
local function shootMurderer()
    local localPlayer = game.Players.LocalPlayer
    local murderer = findMurderer()

    if not isSheriffOrHero(localPlayer) then
        sendNotification("Lỗi", "Bạn không phải Sheriff hoặc Hero!", 3)
        return
    end

    if not murderer or not murderer.Character or not murderer.Character:FindFirstChild("HumanoidRootPart") then 
        sendNotification("Cảnh báo", "Không tìm thấy Murderer!", 3)
        return
    end

    local predictedPosition = predictMurdererPosition(murderer)
    if not predictedPosition then 
        sendNotification("Lỗi", "Không thể xác định vị trí Murderer.", 3)
        return
    end

    game.ReplicatedStorage.Remotes.ShootMurderer:FireServer(predictedPosition)
end

-- **Tạo nút Shoot Murder (Có thể kéo)**
local shootButton = Instance.new("TextButton")
shootButton.Size = UDim2.new(0, 200, 0, 50)
shootButton.Position = UDim2.new(0, 10, 0, 10)
shootButton.Text = "Bắn Murderer"
shootButton.BackgroundColor3 = Color3.fromRGB(0, 100, 255)
shootButton.TextColor3 = Color3.fromRGB(255, 255, 255)
shootButton.Font = Enum.Font.GothamBold
shootButton.TextSize = 18
shootButton.Parent = frame
shootButton.MouseButton1Click:Connect(shootMurderer)

-- **Tạo chức năng kéo nút**
local dragging = false
local dragInput, startPos, dragStart

shootButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

shootButton.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- **Đảm bảo GUI vẫn hiển thị sau khi chết**
game.Players.LocalPlayer.CharacterAdded:Connect(function()
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
end)
