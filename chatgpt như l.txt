-- Tạo hoặc tìm ScreenGui để giữ sau khi reset
local screenGui = game.Players.LocalPlayer:FindFirstChild("PlayerGui"):FindFirstChild("GameAssist_GUI")
if not screenGui then
    screenGui = Instance.new("ScreenGui")
    screenGui.Name = "GameAssist_GUI"
    screenGui.ResetOnSpawn = false  
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
end

-- **Tạo Frame chứa nút để kéo**
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 160, 0, 40) -- Giảm kích thước nút
frame.Position = UDim2.new(0.75, 0, 0.05, 0) -- Di chuyển nút qua trái
frame.BackgroundTransparency = 0.2  -- Tô lại màu nền
frame.BackgroundColor3 = Color3.fromRGB(100, 150, 255) -- Màu xanh dương nhạt
frame.Active = true
frame.Draggable = true -- Cho phép kéo
frame.Parent = screenGui

-- **Tạo nút Shoot Murder (Góc tròn)**
local shootButton = Instance.new("TextButton")
shootButton.Size = UDim2.new(1, 0, 1, 0)
shootButton.Position = UDim2.new(0, 0, 0, 0)
shootButton.Text = "Bắn Murderer"
shootButton.TextColor3 = Color3.fromRGB(255, 255, 255)  -- Chữ màu trắng
shootButton.Font = Enum.Font.GothamBold
shootButton.TextSize = 18
shootButton.BackgroundTransparency = 1  -- Nền trong suốt
shootButton.Parent = frame

-- **Tạo viền cho nút**
local uiStroke = Instance.new("UIStroke", frame)
uiStroke.Thickness = 3  -- Độ dày viền
uiStroke.Color = Color3.fromRGB(0, 100, 255)  -- Viền xanh dương
uiStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

-- **Tạo góc bo tròn**
local uiCorner = Instance.new("UICorner", frame)
uiCorner.CornerRadius = UDim.new(1, 0)

-- **Hàm thông báo**
local function sendNotification(title, text, duration)
    game.StarterGui:SetCore("SendNotification", {
        Title = title,
        Text = text,
        Duration = duration or 3
    })
end

-- **Tìm Murderer**
local function findMurderer()
    for _, player in ipairs(game.Players:GetPlayers()) do
        if player.Backpack:FindFirstChild("Knife") or (player.Character and player.Character:FindFirstChild("Knife")) then
            return player
        end
    end
    return nil
end

-- **Tìm Sheriff hoặc Hero**
local function isSheriffOrHero(player)
    return player.Backpack:FindFirstChild("Gun") or (player.Character and player.Character:FindFirstChild("Gun"))
end

-- **Lấy Ping Hiện Tại**
local function getPing()
    return game.Stats.PerformanceStats.Ping:GetValue() / 1000  -- Chia 1000 để chuyển từ ms sang giây
end

-- **Dự đoán vị trí Murderer theo Ping**
local function predictMurdererPosition(murderer)
    if not murderer or not murderer.Character then return nil end

    local hrp = murderer.Character:FindFirstChild("HumanoidRootPart")
    local humanoid = murderer.Character:FindFirstChild("Humanoid")
    if not hrp or not humanoid then return nil end

    local velocity = hrp.Velocity  
    local moveDir = humanoid.MoveDirection  
    local ping = getPing()  

    -- Điều chỉnh dự đoán theo ping: Ping chuẩn = 100ms
    local basePing = 0.1  -- 100ms
    local predictionFactor = math.clamp(ping / basePing, 0.5, 3)  

    -- Xác định hướng di chuyển và rơi của Murderer
    local yOffset = 0
    if humanoid:GetState() == Enum.HumanoidStateType.Jumping then
        yOffset = humanoid.JumpPower * 0.25 * predictionFactor
    elseif humanoid:GetState() == Enum.HumanoidStateType.Freefall then
        yOffset = -humanoid.JumpPower * 0.15 * predictionFactor
    end

    return hrp.Position + (velocity * ping * predictionFactor) + (moveDir * 3 * predictionFactor) + Vector3.new(0, yOffset, 0)
end

-- **Shoot Murder (Tự động cầm súng + Dự đoán theo Ping)**
local function shootMurderer()
    local localPlayer = game.Players.LocalPlayer
    local murderer = findMurderer()

    if not isSheriffOrHero(localPlayer) then
        sendNotification("Lỗi", "Bạn không phải Sheriff hoặc Hero!", 3)
        return
    end

    if not murderer or not murderer.Character or not murderer.Character:FindFirstChild("HumanoidRootPart") then 
        sendNotification("Cảnh báo", "Không tìm thấy Murderer!", 3)
        return
    end

    local predictedPosition = predictMurdererPosition(murderer)
    if not predictedPosition then 
        sendNotification("Lỗi", "Không thể xác định vị trí Murderer.", 3)
        return
    end

    -- **Tự động cầm súng trước khi bắn**
    local gun = localPlayer.Backpack:FindFirstChild("Gun") or localPlayer.Character:FindFirstChild("Gun")
    if gun then
        gun.Parent = localPlayer.Character -- Trang bị súng
        task.wait(0.1) -- Chờ một chút trước khi bắn
    else
        sendNotification("Lỗi", "Không tìm thấy súng!", 3)
        return
    end

    -- **Bắn Murderer bằng RemoteFunction**
    if gun:FindFirstChild("KnifeLocal") and gun.KnifeLocal:FindFirstChild("CreateBeam") and gun.KnifeLocal.CreateBeam:FindFirstChild("RemoteFunction") then
        gun.KnifeLocal.CreateBeam.RemoteFunction:InvokeServer(predictedPosition)
    else
        sendNotification("Lỗi", "Không thể bắn Murderer!", 3)
    end
end

-- **Gán chức năng bắn cho nút**
shootButton.MouseButton1Click:Connect(shootMurderer)

-- **Đảm bảo GUI vẫn hiển thị sau khi chết**
game.Players.LocalPlayer.CharacterAdded:Connect(function()
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
end)
